{"version":3,"sources":["item-detail-edit.component.ts"],"names":["core_1","require","router_1","item_1","item_service_1","ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","Item","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","Component","selector","template","ItemService","Router","ActivatedRoute","exports"],"mappings":"6jBAAA,IAAAA,OAAAC,QAAA,iBACAC,SAAAD,QAAA,mBACAE,OAAAF,QAAA,UACAG,eAAAH,QAAA,kBAkEAI,wBAAA,WAGI,SAAAA,EAAoBC,EACRC,EACAC,GAFQC,KAAAH,YAAAA,EACRG,KAAAF,OAAAA,EACAE,KAAAD,eAAAA,EAuDhB,OArDIH,EAAAK,UAAAC,SAAA,WAAA,IAAAC,EAAAH,KACQI,GAAMJ,KAAKD,eAAeM,SAASC,OAAW,GAC9CF,EACAJ,KAAKH,YAAYU,IAAIH,GAAII,UAAU,SAAAC,GAAQ,OAAAN,EAAKM,KAAOA,IACzC,IAAPL,GACPM,QAAQC,IAAI,+BACZX,KAAKS,KAAO,IAAIf,OAAAkB,KAAK,EAAG,WAAY,QAEpCF,QAAQC,IAAI,uCACZX,KAAKF,OAAOe,UAAU,OAI9BjB,EAAAK,UAAAa,SAAA,SAASL,GAAT,IAAAN,EAAAH,KACIA,KAAKH,YAAYkB,IAAIN,GAAMD,UACvB,SAACQ,GACGb,EAAKM,KAAOO,EACZN,QAAQC,IAAI,QAAUR,EAAKM,KAAKQ,GAAK,oBACrCd,EAAKL,OAAOe,UAAU,MAE1B,SAACK,GAAU,OAAAR,QAAQC,IAAIO,MAI/BtB,EAAAK,UAAAkB,SAAA,SAASV,GAAT,IAAAN,EAAAH,KACIA,KAAKH,YAAYuB,OAAOX,GAAMD,UAC1B,SAACQ,GACGb,EAAKM,KAAOO,EACZN,QAAQC,IAAI,QAAUR,EAAKM,KAAKQ,GAAK,sBACrCd,EAAKL,OAAOe,UAAU,YAAaV,EAAKM,KAAKQ,MAEjD,SAACC,GAAU,OAAAR,QAAQC,IAAIO,MAI/BtB,EAAAK,UAAAoB,SAAA,SAASZ,GAAT,IAAAN,EAAAH,KACQI,EAAKK,EAAKQ,GACdjB,KAAKH,YAAYyB,OAAOlB,GAAII,UACxB,SAACQ,GACGN,QAAQC,IAAI,QAAUP,EAAK,sBAC3BD,EAAKL,OAAOe,UAAU,MAE1B,SAACK,GAAU,OAAAR,QAAQC,IAAIO,MAI/BtB,EAAAK,UAAAsB,OAAA,WACIvB,KAAKF,OAAOe,UAAU,MAG1BjB,EAAAK,UAAAuB,iBAAA,SAAiBf,GACbT,KAAKF,OAAOe,UAAU,YAAaJ,EAAKQ,MA1DnCrB,EAAuB6B,YAhEnClC,OAAAmC,WACGC,SAAU,mBACVC,SAAU,63HAiEuBjC,eAAAkC,YACbpC,SAAAqC,OACQrC,SAAAsC,kBALnBnC,GAAb,GAAaoC,QAAApC,wBAAAA","file":"item-detail-edit.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Item } from \"./item\"\r\nimport { ItemService } from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail-edit\",\r\n    template: `\r\n        <div *ngIf=\"item\">\r\n            <h2>\r\n                <a href=\"#\" (click)=\"onBack()\">\r\n                    &laquo; Back to Home\r\n                </a>\r\n            </h2>\r\n            <div class=\"item-container\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li role=\"presentation\" class=\"active\">\r\n                        <a href=\"#\">Edit</a>\r\n                    </li>\r\n                    <li role=\"presentation\" *ngIf=\"item.Id != 0\">\r\n                        <a href=\"#\" (click)=\"onItemDetailView(item)\">View</a>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"panel panel-default\">\r\n                    <div class=\"panel-body\">\r\n                        <form class=\"item-detail-edit\">\r\n                            <h3>\r\n                                {{item.Title}}\r\n                                <span class=\"empty-field\" [hidden]=\"dTitle.valid\">\r\n                                    Empty Title\r\n                                </span>\r\n                            </h3>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"input-title\">Title</label>\r\n                                <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" />\r\n\r\n                                <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': dTitle.valid, 'has-error': !dTitle.valid}\">\r\n                                    <label for=\"input-title\">Title</label>\r\n                                    <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"formcontrol\" [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" required #dTitle=\"ngModel\" />\r\n                                    <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': dTitle.valid, 'glyphicon-remove': !dTitle.valid}\"></span>\r\n                                    <div [hidden]=\" dTitle.valid\" class=\"alert alert-danger\">\r\n                                        You need to enter a valid Title.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"input-description\">Description</label>\r\n                                <textarea id=\"input-description\" name=\"inputdescription\" class=\"form-control\" [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\" required></textarea>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"input-text\">Text</label>\r\n                                <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" [(ngModel)]=\"item.Text\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                            </div>\r\n                            <div *ngIf=\"item.Id == 0\" class=\"commands insert\">\r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert(item)\" />\r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                            </div>\r\n                            <div *ngIf=\"item.Id != 0\" class=\"commands update\">\r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate(item)\" />\r\n                                <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(item)\" />\r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n\r\n    constructor(private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n        } else if (id === 0) {\r\n            console.log(\"id is 0: adding new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        } else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Item \" + id + \" has been deleted.\")\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n    }\r\n}"]}