{"version":3,"sources":["auth.http.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAC3C,sCAA8C;AAG9C;IAII,kBAAY,IAAU;QAHtB,SAAI,GAAG,IAAI,CAAC;QACZ,YAAO,GAAG,MAAM,CAAC;QAGb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,sBAAG,GAAH,UAAI,GAAG,EAAE,IAAS;QAAT,qBAAA,EAAA,SAAS;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,uBAAI,GAAJ,UAAK,GAAG,EAAE,IAAI,EAAE,IAAS;QAAT,qBAAA,EAAA,SAAS;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,sBAAG,GAAH,UAAI,GAAG,EAAE,IAAI,EAAE,IAAS;QAAT,qBAAA,EAAA,SAAS;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,yBAAM,GAAN,UAAO,GAAG,EAAE,IAAS;QAAT,qBAAA,EAAA,SAAS;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,gCAAa,GAAb,UAAc,IAAS;QACnB,IAAI,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;gBACjC,CAAC;gBACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,YAAU,IAAI,CAAC,YAAc,CAAC,CAAC;YACrE,CAAC;QACL,CAAC;IACL,CAAC;IAxCQ,QAAQ;QADpB,iBAAU,EAAE;yCAKS,WAAI;OAJb,QAAQ,CAyCpB;IAAD,eAAC;CAzCD,AAyCC,IAAA;AAzCY,4BAAQ","file":"auth.http.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class AuthHttp {\r\n    http = null;\r\n    authKey = \"auth\";\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n    }\r\n\r\n    get(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.get(url, opts);\r\n    }\r\n\r\n    post(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.post(url, data, opts);\r\n    }\r\n\r\n    put(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.put(url, data, opts);\r\n    }\r\n\r\n    delete(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.delete(url, opts);\r\n    }\r\n\r\n    configureAuth(opts: any) {\r\n        var i = localStorage.getItem(this.authKey);\r\n        if (i != null) {\r\n            var auth = JSON.parse(i);\r\n            console.log(auth);\r\n            if (auth.access_token != null) {\r\n                if (opts.headers == null) {\r\n                    opts.headers = new Headers();\r\n                }\r\n                opts.headers.set(\"Authorization\", `Bearer ${auth.access_token}`);\r\n            }\r\n        }\r\n    }\r\n}"]}