{"version":3,"sources":["item-list.component.ts"],"names":["core_1","require","item_service_1","ItemListComponent","itemService","this","prototype","ngOnInit","getLatest","_this","subscribe","latestItems","items","error","errorMessage","onSelect","item","selectedItem","console","log","Id","__decorate","Component","selector","template","styles","ItemService","exports"],"mappings":"6jBAAA,IAAAA,OAAAC,QAAA,iBAEAC,eAAAD,QAAA,kBAwBAE,kBAAA,WAKI,SAAAA,EAAoBC,GAAAC,KAAAD,YAAAA,EAkBxB,OAhBID,EAAAG,UAAAC,SAAA,WACIF,KAAKG,aAGTL,EAAAG,UAAAE,UAAA,WAAA,IAAAC,EAAAJ,KACIA,KAAKD,YAAYI,YACZE,UACG,SAAAC,GAAe,OAAAF,EAAKG,MAAQD,GAC5B,SAAAE,GAAS,OAAAJ,EAAKK,aAAoBD,KAI9CV,EAAAG,UAAAS,SAAA,SAASC,GACLX,KAAKY,aAAeD,EACpBE,QAAQC,IAAI,gBAAkBd,KAAKY,aAAaG,GAAK,wBArBhDjB,EAAiBkB,YAtB7BrB,OAAAsB,WACGC,SAAU,YACVC,SAAU,qXAWVC,QAAS,+LAcwBvB,eAAAwB,eALxBvB,GAAb,GAAawB,QAAAxB,kBAAAA","file":"item-list.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Item } from \"./item\";\r\nimport { ItemService } from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-list\",\r\n    template: `\r\n        <h2>Latest Items:</h2>\r\n        <ul class=\"items\">\r\n            <li *ngFor=\"let item of items\"\r\n                [class.selected]=\"item === selectedItem\"\r\n                (click)=\"onSelect(item)\">\r\n                <span>{{item.Title}}</span>\r\n            </li>\r\n        </ul>\r\n        <item-detail *ngIf=\"selectedItem\" [item]=\"selectedItem\"></item-detail>\r\n    `,\r\n    styles: [`\r\n        ul.items li {\r\n            cursor: pointer;\r\n        }\r\n        ul.items li.selected {\r\n            background-color: #cccccc;\r\n        }\r\n    `]\r\n})\r\nexport class ItemListComponent implements OnInit {\r\n    selectedItem: Item;\r\n    items: Item[];\r\n    errorMessage: string;\r\n\r\n    constructor(private itemService: ItemService) { }\r\n\r\n    ngOnInit() {\r\n        this.getLatest();\r\n    }\r\n\r\n    getLatest() {\r\n        this.itemService.getLatest()\r\n            .subscribe(\r\n                latestItems => this.items = latestItems,\r\n                error => this.errorMessage = <any>error\r\n            );\r\n    }\r\n\r\n    onSelect(item: Item) {\r\n        this.selectedItem = item;\r\n        console.log(\"item with Id \" + this.selectedItem.Id + \" has been selected.\");\r\n    }\r\n}"]}